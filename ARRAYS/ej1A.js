// Creamos un array vac√≠o para guardar todas las palabras que el usuario introduzca
let palabras = [];

// Bucle infinito: seguimos pidiendo palabras hasta que el usuario cancele o deje el campo vac√≠o
while (true) {
    // Mostramos un cuadro de di√°logo para que el usuario escriba una palabra
    let entrada = prompt("Introduce una palabra (deja vac√≠o o cancela para terminar):");
    
    // Si el usuario hace clic en "Cancelar", prompt() devuelve null
    // Si el usuario escribe solo espacios o nada, trim() lo convierte en cadena vac√≠a ""
    if (entrada === null || entrada.trim() === "") {
        break; // Salimos del bucle
    }

    // Guardamos la palabra EXACTAMENTE como la escribi√≥ (con espacios, may√∫sculas, etc.)
    // Lo hacemos as√≠ porque m√°s adelante vamos a validarla y limpiarla
    palabras.push(entrada);
}

// Ahora vamos a filtrar solo las palabras V√ÅLIDAS
let validas = []; // Array donde guardaremos las palabras que cumplan las reglas

// Recorremos cada palabra que el usuario introdujo
for (let i = 0; i < palabras.length; i++) {
    let palabra = palabras[i]; // La palabra actual

    // trim() elimina espacios al principio y al final
    // Ejemplo: "  hola  " ‚Üí "hola"
    let trimPalabra = palabra.trim();

    // Si despu√©s de quitar espacios no queda nada, la ignoramos
    if (trimPalabra === "") {
        continue; // Pasamos a la siguiente palabra
    }

    // üîç ¬øContiene alg√∫n n√∫mero?
    // /\d/ es una expresi√≥n regular que significa: "¬øhay alg√∫n d√≠gito del 0 al 9?"
    // .test() devuelve true si encuentra al menos un n√∫mero
    let tieneNumeros = /\d/.test(trimPalabra);

    // üîç ¬øContiene alg√∫n espacio EN MEDIO?
    // / / es una expresi√≥n regular que busca un espacio en blanco
    // Si la palabra es "hola mundo", tiene un espacio ‚Üí inv√°lida
    // Nota: ya quitamos espacios al inicio y al final con trim(), as√≠ que si hay un espacio ahora, es INTERMEDIO
    let tieneEspaciosIntermedios = / /.test(trimPalabra);

    // Solo aceptamos la palabra si:
    // - NO tiene n√∫meros
    // - NO tiene espacios intermedios
    if (!tieneNumeros && !tieneEspaciosIntermedios) {
        // Si pasa las pruebas, la guardamos (ya limpia, sin espacios al inicio/final)
        validas.push(trimPalabra);
    }
}

// Ordenamos las palabras v√°lidas de la Z a la A
// Primero .sort() las ordena de la A a la Z (orden alfab√©tico normal)
// Luego .reverse() invierte el orden ‚Üí queda de la Z a la A
validas.sort().reverse();

// Mostramos cada palabra v√°lida en la consola del navegador
for (let i = 0; i < validas.length; i++) {
    // i + 1 porque los √≠ndices en programaci√≥n empiezan en 0, pero para el usuario mostramos 1, 2, 3...
    console.log(`El elemento ${i + 1} es: ${validas[i]}`);
}